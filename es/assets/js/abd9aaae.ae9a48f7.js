"use strict";(self.webpackChunkd_app_node_docs=self.webpackChunkd_app_node_docs||[]).push([[535],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=r,k=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9486:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return s}});var a=n(3117),r=(n(7294),n(3905));const o={sidebar_position:2},i="Installation",l={unversionedId:"get-started/installation/arm-hardware/installation",id:"get-started/installation/arm-hardware/installation",title:"Installation",description:"Prepare and boot ISO",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/get-started/installation/arm-hardware/installation.md",sourceDirName:"get-started/installation/arm-hardware",slug:"/get-started/installation/arm-hardware/installation",permalink:"/es/get-started/installation/arm-hardware/installation",draft:!1,editUrl:"https://github.com/dappnode/DAppNodeDocs/blob/master/i18n/es/docusaurus-plugin-content-docs/current/get-started/installation/arm-hardware/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"Hardware Recommendations",permalink:"/es/get-started/installation/arm-hardware/hardware-recommendations"},next:{title:"Overview",permalink:"/es/user-guide/overview"}},p={},s=[{value:"Prepare and boot ISO",id:"prepare-and-boot-iso",level:2},{value:"Basic Set up",id:"basic-set-up",level:2}],d={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"installation"},"Installation"),(0,r.kt)("h2",{id:"prepare-and-boot-iso"},"Prepare and boot ISO"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Download the file ",(0,r.kt)("inlineCode",{parentName:"p"},"DAppNodeARM-x.x.xx.img.gz/zip")," from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/dappnode/DAppNode/releases/tag/v0.2.39"},"here"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Unzip the file.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Write the image into the microSD. To do that, there are different tools such as ",(0,r.kt)("a",{parentName:"p",href:"https://www.raspberrypi.org/software/"},"Raspberry Pi imager")," and Rufus(for windows). In this example we used Raspberry Pi imager."))),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"../../../../img/arm_installation_1.png"})),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Insert the microSD into the Raspberry Pi.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Connect the Raspberry Pi to a screen and a keyboard.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Switch on the Raspberry Pi and wait for the startup process."))),(0,r.kt)("p",null,"You will see this screen."),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"../../../../img/arm_installation_2.png"})),(0,r.kt)("p",null,"The default credentials are.\nUser:\n",(0,r.kt)("inlineCode",{parentName:"p"},"dappnode"),"\nPassword:\n",(0,r.kt)("inlineCode",{parentName:"p"},"dappnodepi")),(0,r.kt)("p",null,"Once you have logged in, you will see the next message:\n",(0,r.kt)("inlineCode",{parentName:"p"},"If you want to add any additional partition or disk, do it now."),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"Run 'sudo dappnodepi-install' command to install DAppNode when ready."),"\nConnect your raspberry to the internet.\nExecute ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo dappnodedepi-install")," to finalize the dappnode installation."),(0,r.kt)("h2",{id:"basic-set-up"},"Basic Set up"),(0,r.kt)("p",null,"In case you have installed DAppNode in a raspberry using a sd card and you want to use a ssd hard disk you should to mount docker in this ssd. To do this follow the next steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Stop Docker service\n",(0,r.kt)("inlineCode",{parentName:"p"},"systemctl stop docker"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create a new mountpoint for docker data. As an example:\n",(0,r.kt)("inlineCode",{parentName:"p"},"mkdir /data"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Add your partition on the new device to ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/fstab"),". You can identify its UUID using the ",(0,r.kt)("inlineCode",{parentName:"p"},"blkid")," tool. Make sure your device is properly partitioned first. Your line in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/fstab")," should look like this:\n",(0,r.kt)("inlineCode",{parentName:"p"},"UUID=b311b983-bda6-4e9f-835c-266d40d64f07 /data/ ext4 defaults 0 0"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Mount your SSD drive\n",(0,r.kt)("inlineCode",{parentName:"p"},"mount /data"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Move docker data to the mountpoint\n",(0,r.kt)("inlineCode",{parentName:"p"},"mv /var/lib/docker/* /data/"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Edit Docker settings to use the alternative location. Edit ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/docker/daemon.json")," as follows:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "data-root": "/data"\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Restart docker")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"systemctl start docker")))}u.isMDXComponent=!0}}]);